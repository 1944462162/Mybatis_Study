<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imust.dao.IUserDao">

    <!--开启二级缓存-->
    <cache/>
    <select id="findAll" resultType="com.imust.domain.User">
        select * from user
    </select>


    <insert id="saveUser" parameterType="com.imust.domain.User">
--         keyProperty返回值得名称 resultType返回值得类型
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>

        insert into user(username,address,sex,birthday) values (#{username},#{address},#{sex},#{birthday});
    </insert>

    <update id="updateUser" parameterType="com.imust.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer"  >
        delete from user where id=#{uid}
    </delete>

    <!--打开二级缓存-->
    <select id="findUser" parameterType="int" resultType="com.imust.domain.User" useCache="true">
        select * from user where id = #{id}
    </select>

    <select id="findUserByName" parameterType="String" resultType="com.imust.domain.User">
        select * from user where username like #{name}
    </select>

    <select id="UserTotal" resultType="int">
        select count(id) from user
    </select>

    <select id="findAllUserByName" parameterType="com.imust.domain.QueryVo" resultType="com.imust.domain.User">
        select * from user where username like #{user.username}
    </select>

    <!--因为配置别名所以可以使用user-->
    <select id="findUserByCondition" resultType="user" parameterType="user">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
        </where>
    </select>


    <!--#里面写的东西取决于item-->
    <select id="findUserByIds" resultType="user" parameterType="queryvo">
        select * from user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" item="id" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
